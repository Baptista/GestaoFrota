//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestFleet.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class gestaofrotasEntities : DbContext
    {
        public gestaofrotasEntities()
            : base("name=gestaofrotasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Combustivel> Combustivels { get; set; }
        public virtual DbSet<Configuracao> Configuracaos { get; set; }
        public virtual DbSet<Danos_Veiculo> Danos_Veiculo { get; set; }
        public virtual DbSet<Danos_Veiculo_Comprovativo> Danos_Veiculo_Comprovativo { get; set; }
        public virtual DbSet<Estado_Pedido_Marcacao> Estado_Pedido_Marcacao { get; set; }
        public virtual DbSet<Justificacao_Pedido_Marcacao> Justificacao_Pedido_Marcacao { get; set; }
        public virtual DbSet<Marca> Marcas { get; set; }
        public virtual DbSet<Modelo> Modeloes { get; set; }
        public virtual DbSet<Pedido_Marcacao> Pedido_Marcacao { get; set; }
        public virtual DbSet<Pedido_Marcacao_Historico> Pedido_Marcacao_Historico { get; set; }
        public virtual DbSet<Perfil> Perfils { get; set; }
        public virtual DbSet<Perfil_Permissao> Perfil_Permissao { get; set; }
        public virtual DbSet<Permissao> Permissaos { get; set; }
        public virtual DbSet<Tipo_Justificacao_Pedido> Tipo_Justificacao_Pedido { get; set; }
        public virtual DbSet<Tipologia> Tipologias { get; set; }
        public virtual DbSet<Utilizador> Utilizadors { get; set; }
        public virtual DbSet<Veiculo> Veiculoes { get; set; }
        public virtual DbSet<Veiculo_Entrega> Veiculo_Entrega { get; set; }
    
        public virtual int spAlteraEstadoMarca(Nullable<int> idmarca)
        {
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraEstadoMarca", idmarcaParameter);
        }
    
        public virtual int spAlteraEstadoModelo(Nullable<int> idmodelo)
        {
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraEstadoModelo", idmodeloParameter);
        }
    
        public virtual int spAlteraEstadoTipologia(Nullable<int> idtipologia)
        {
            var idtipologiaParameter = idtipologia.HasValue ?
                new ObjectParameter("idtipologia", idtipologia) :
                new ObjectParameter("idtipologia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraEstadoTipologia", idtipologiaParameter);
        }
    
        public virtual int spAlteraEstadoUtilizador(Nullable<int> idutilizador)
        {
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraEstadoUtilizador", idutilizadorParameter);
        }
    
        public virtual int spAlteraEstadoVeiculo(Nullable<int> idveiculo)
        {
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraEstadoVeiculo", idveiculoParameter);
        }
    
        public virtual int spAlteraMarca(Nullable<int> idmarca, string descricao)
        {
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraMarca", idmarcaParameter, descricaoParameter);
        }
    
        public virtual int spAlteraModelo(Nullable<int> idmodelo, Nullable<int> idmarca, string descricao, Nullable<int> idcombustivel)
        {
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var idcombustivelParameter = idcombustivel.HasValue ?
                new ObjectParameter("idcombustivel", idcombustivel) :
                new ObjectParameter("idcombustivel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraModelo", idmodeloParameter, idmarcaParameter, descricaoParameter, idcombustivelParameter);
        }
    
        public virtual int spAlteraPasswordDefault(string password)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraPasswordDefault", passwordParameter);
        }
    
        public virtual int spAlteraPasswordUtilizador(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraPasswordUtilizador", usernameParameter, passwordParameter);
        }
    
        public virtual int spAlteraPedidoMarcacao(Nullable<int> idpedidomarcacaohistorico, Nullable<int> idveiculo, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim)
        {
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraPedidoMarcacao", idpedidomarcacaohistoricoParameter, idveiculoParameter, datainicioParameter, datafimParameter);
        }
    
        public virtual int spAlteraPedidoMarcacaoComJustificacao(Nullable<int> idpedidomarcacaohistorico, Nullable<int> idveiculo, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim, string justificacao)
        {
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            var justificacaoParameter = justificacao != null ?
                new ObjectParameter("justificacao", justificacao) :
                new ObjectParameter("justificacao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraPedidoMarcacaoComJustificacao", idpedidomarcacaohistoricoParameter, idveiculoParameter, datainicioParameter, datafimParameter, justificacaoParameter);
        }
    
        public virtual int spAlteraTipologia(Nullable<int> idtipologia, string descricao)
        {
            var idtipologiaParameter = idtipologia.HasValue ?
                new ObjectParameter("idtipologia", idtipologia) :
                new ObjectParameter("idtipologia", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraTipologia", idtipologiaParameter, descricaoParameter);
        }
    
        public virtual int spAlteraUtilizador(Nullable<int> idutilizador, string username, string nome, Nullable<int> idperfil)
        {
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var idperfilParameter = idperfil.HasValue ?
                new ObjectParameter("idperfil", idperfil) :
                new ObjectParameter("idperfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraUtilizador", idutilizadorParameter, usernameParameter, nomeParameter, idperfilParameter);
        }
    
        public virtual int spAlteraVeiculo(Nullable<int> idveiculo, Nullable<int> idmodelo, Nullable<int> idtipologia, string matricula, Nullable<int> idowner, Nullable<decimal> kms, Nullable<decimal> kmscontrato)
        {
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            var idtipologiaParameter = idtipologia.HasValue ?
                new ObjectParameter("idtipologia", idtipologia) :
                new ObjectParameter("idtipologia", typeof(int));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("matricula", matricula) :
                new ObjectParameter("matricula", typeof(string));
    
            var idownerParameter = idowner.HasValue ?
                new ObjectParameter("idowner", idowner) :
                new ObjectParameter("idowner", typeof(int));
    
            var kmsParameter = kms.HasValue ?
                new ObjectParameter("kms", kms) :
                new ObjectParameter("kms", typeof(decimal));
    
            var kmscontratoParameter = kmscontrato.HasValue ?
                new ObjectParameter("kmscontrato", kmscontrato) :
                new ObjectParameter("kmscontrato", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlteraVeiculo", idveiculoParameter, idmodeloParameter, idtipologiaParameter, matriculaParameter, idownerParameter, kmsParameter, kmscontratoParameter);
        }
    
        public virtual int spAprovaPedidoMarcacao(Nullable<int> idpedidomarcacaohistorico)
        {
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAprovaPedidoMarcacao", idpedidomarcacaohistoricoParameter);
        }
    
        public virtual int spAssociaComprovativoAoDano(Nullable<int> iddanosveiculo, byte[] documento, string formatodocumento, string nomedocument)
        {
            var iddanosveiculoParameter = iddanosveiculo.HasValue ?
                new ObjectParameter("iddanosveiculo", iddanosveiculo) :
                new ObjectParameter("iddanosveiculo", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(byte[]));
    
            var formatodocumentoParameter = formatodocumento != null ?
                new ObjectParameter("formatodocumento", formatodocumento) :
                new ObjectParameter("formatodocumento", typeof(string));
    
            var nomedocumentParameter = nomedocument != null ?
                new ObjectParameter("nomedocument", nomedocument) :
                new ObjectParameter("nomedocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAssociaComprovativoAoDano", iddanosveiculoParameter, documentoParameter, formatodocumentoParameter, nomedocumentParameter);
        }
    
        public virtual int spCancelaPedidoMarcacao(Nullable<int> idutilizador, Nullable<int> idpedidomarcacaohistorico, Nullable<int> idveiculo, string justificacao)
        {
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var justificacaoParameter = justificacao != null ?
                new ObjectParameter("justificacao", justificacao) :
                new ObjectParameter("justificacao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCancelaPedidoMarcacao", idutilizadorParameter, idpedidomarcacaohistoricoParameter, idveiculoParameter, justificacaoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spCriaDanoNoVeiculo(Nullable<int> idveiculo, string descricao)
        {
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spCriaDanoNoVeiculo", idveiculoParameter, descricaoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spCriaDanoNoVeiculoPedidoMarcacao(Nullable<int> idpedidomarcacaohistorico, Nullable<int> idveiculo, string descricao)
        {
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spCriaDanoNoVeiculoPedidoMarcacao", idpedidomarcacaohistoricoParameter, idveiculoParameter, descricaoParameter);
        }
    
        public virtual int spCriaMarca(string descricao)
        {
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCriaMarca", descricaoParameter);
        }
    
        public virtual int spCriaModelo(string descricao, Nullable<int> idmarca, Nullable<int> idcombustivel)
        {
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            var idcombustivelParameter = idcombustivel.HasValue ?
                new ObjectParameter("idcombustivel", idcombustivel) :
                new ObjectParameter("idcombustivel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCriaModelo", descricaoParameter, idmarcaParameter, idcombustivelParameter);
        }
    
        public virtual int spCriaPedidoMarcacao(Nullable<int> idveiculo, Nullable<int> idutilizador, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim)
        {
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCriaPedidoMarcacao", idveiculoParameter, idutilizadorParameter, datainicioParameter, datafimParameter);
        }
    
        public virtual int spCriaPedidoMarcacaoComJustificacao(Nullable<int> idveiculo, Nullable<int> idutilizador, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim, string justificacao, Nullable<int> idpedidomarcacaohistoricosobreposicao)
        {
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            var justificacaoParameter = justificacao != null ?
                new ObjectParameter("justificacao", justificacao) :
                new ObjectParameter("justificacao", typeof(string));
    
            var idpedidomarcacaohistoricosobreposicaoParameter = idpedidomarcacaohistoricosobreposicao.HasValue ?
                new ObjectParameter("idpedidomarcacaohistoricosobreposicao", idpedidomarcacaohistoricosobreposicao) :
                new ObjectParameter("idpedidomarcacaohistoricosobreposicao", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCriaPedidoMarcacaoComJustificacao", idveiculoParameter, idutilizadorParameter, datainicioParameter, datafimParameter, justificacaoParameter, idpedidomarcacaohistoricosobreposicaoParameter);
        }
    
        public virtual int spCriaTipologia(string descricao)
        {
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCriaTipologia", descricaoParameter);
        }
    
        public virtual int spCriaUtilizador(string username, string nome, Nullable<int> idperfil)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var idperfilParameter = idperfil.HasValue ?
                new ObjectParameter("idperfil", idperfil) :
                new ObjectParameter("idperfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCriaUtilizador", usernameParameter, nomeParameter, idperfilParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spCriaVeiculo(Nullable<int> idmodelo, Nullable<int> idtipologia, string matricula, Nullable<int> idowner, Nullable<decimal> kms, Nullable<decimal> kmscontrato)
        {
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            var idtipologiaParameter = idtipologia.HasValue ?
                new ObjectParameter("idtipologia", idtipologia) :
                new ObjectParameter("idtipologia", typeof(int));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("matricula", matricula) :
                new ObjectParameter("matricula", typeof(string));
    
            var idownerParameter = idowner.HasValue ?
                new ObjectParameter("idowner", idowner) :
                new ObjectParameter("idowner", typeof(int));
    
            var kmsParameter = kms.HasValue ?
                new ObjectParameter("kms", kms) :
                new ObjectParameter("kms", typeof(decimal));
    
            var kmscontratoParameter = kmscontrato.HasValue ?
                new ObjectParameter("kmscontrato", kmscontrato) :
                new ObjectParameter("kmscontrato", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spCriaVeiculo", idmodeloParameter, idtipologiaParameter, matriculaParameter, idownerParameter, kmsParameter, kmscontratoParameter);
        }
    
        public virtual ObjectResult<spDetalheDanosVeiculo_Result> spDetalheDanosVeiculo(Nullable<int> idveiculo)
        {
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalheDanosVeiculo_Result>("spDetalheDanosVeiculo", idveiculoParameter);
        }
    
        public virtual ObjectResult<spDetalheMarca_Result> spDetalheMarca(Nullable<int> idmarca)
        {
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalheMarca_Result>("spDetalheMarca", idmarcaParameter);
        }
    
        public virtual ObjectResult<spDetalheModelo_Result> spDetalheModelo(Nullable<int> idmodelo)
        {
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalheModelo_Result>("spDetalheModelo", idmodeloParameter);
        }
    
        public virtual ObjectResult<spDetalheTipologia_Result> spDetalheTipologia(Nullable<int> idtipologia)
        {
            var idtipologiaParameter = idtipologia.HasValue ?
                new ObjectParameter("idtipologia", idtipologia) :
                new ObjectParameter("idtipologia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalheTipologia_Result>("spDetalheTipologia", idtipologiaParameter);
        }
    
        public virtual ObjectResult<spDetalheUtilizador_Result> spDetalheUtilizador(Nullable<int> idutilizador)
        {
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalheUtilizador_Result>("spDetalheUtilizador", idutilizadorParameter);
        }
    
        public virtual ObjectResult<spDetalheVeiculo_Result> spDetalheVeiculo(Nullable<int> idveiculo)
        {
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDetalheVeiculo_Result>("spDetalheVeiculo", idveiculoParameter);
        }
    
        public virtual int spEliminaDanoVeiculo(Nullable<int> iddanos)
        {
            var iddanosParameter = iddanos.HasValue ?
                new ObjectParameter("iddanos", iddanos) :
                new ObjectParameter("iddanos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaDanoVeiculo", iddanosParameter);
        }
    
        public virtual int spEliminaMarca(Nullable<int> idmarca)
        {
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaMarca", idmarcaParameter);
        }
    
        public virtual int spEliminaModelo(Nullable<int> idmodelo)
        {
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaModelo", idmodeloParameter);
        }
    
        public virtual int spEliminaTipologia(Nullable<int> idtipologia)
        {
            var idtipologiaParameter = idtipologia.HasValue ?
                new ObjectParameter("idtipologia", idtipologia) :
                new ObjectParameter("idtipologia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaTipologia", idtipologiaParameter);
        }
    
        public virtual int spEliminaUtilizador(Nullable<int> idutilizador)
        {
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaUtilizador", idutilizadorParameter);
        }
    
        public virtual int spEliminaVeiculo(Nullable<int> idveiculo)
        {
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaVeiculo", idveiculoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spExisteSobreposicao(Nullable<int> idutilizador, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim)
        {
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spExisteSobreposicao", idutilizadorParameter, datainicioParameter, datafimParameter);
        }
    
        public virtual ObjectResult<spListaCombustiveis_Result> spListaCombustiveis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaCombustiveis_Result>("spListaCombustiveis");
        }
    
        public virtual ObjectResult<spListaDetalhesPedidoMarcacao_Result> spListaDetalhesPedidoMarcacao(Nullable<int> idpedidomarcacaohistorico)
        {
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaDetalhesPedidoMarcacao_Result>("spListaDetalhesPedidoMarcacao", idpedidomarcacaohistoricoParameter);
        }
    
        public virtual ObjectResult<spListaHistoricoSobreposicoes_Result> spListaHistoricoSobreposicoes(Nullable<int> idpedidomarcacaohistorico, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim)
        {
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaHistoricoSobreposicoes_Result>("spListaHistoricoSobreposicoes", idpedidomarcacaohistoricoParameter, datainicioParameter, datafimParameter);
        }
    
        public virtual ObjectResult<spListaMarcas_Result> spListaMarcas(Nullable<int> idmodelo, Nullable<bool> todas)
        {
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            var todasParameter = todas.HasValue ?
                new ObjectParameter("todas", todas) :
                new ObjectParameter("todas", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaMarcas_Result>("spListaMarcas", idmodeloParameter, todasParameter);
        }
    
        public virtual ObjectResult<spListaModelos_Result> spListaModelos(Nullable<int> id, Nullable<bool> todos)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var todosParameter = todos.HasValue ?
                new ObjectParameter("todos", todos) :
                new ObjectParameter("todos", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaModelos_Result>("spListaModelos", idParameter, todosParameter);
        }
    
        public virtual ObjectResult<spListaModelosPorMarca_Result> spListaModelosPorMarca(Nullable<int> idmarca, Nullable<int> idmodelo)
        {
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaModelosPorMarca_Result>("spListaModelosPorMarca", idmarcaParameter, idmodeloParameter);
        }
    
        public virtual ObjectResult<spListaOwners_Result> spListaOwners(Nullable<int> id, Nullable<bool> todos)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var todosParameter = todos.HasValue ?
                new ObjectParameter("todos", todos) :
                new ObjectParameter("todos", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaOwners_Result>("spListaOwners", idParameter, todosParameter);
        }
    
        public virtual ObjectResult<spListaPedidoMarcacoes_Result> spListaPedidoMarcacoes(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaPedidoMarcacoes_Result>("spListaPedidoMarcacoes", iduserParameter);
        }
    
        public virtual ObjectResult<spListaPedidoMarcacoesPendentes_Result> spListaPedidoMarcacoesPendentes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaPedidoMarcacoesPendentes_Result>("spListaPedidoMarcacoesPendentes");
        }
    
        public virtual ObjectResult<spListaPedidoMarcacoesPendentesEntrega_Result> spListaPedidoMarcacoesPendentesEntrega()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaPedidoMarcacoesPendentesEntrega_Result>("spListaPedidoMarcacoesPendentesEntrega");
        }
    
        public virtual ObjectResult<string> spListaPerfilUtilizador(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spListaPerfilUtilizador", usernameParameter);
        }
    
        public virtual ObjectResult<spListaPerfis_Result> spListaPerfis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaPerfis_Result>("spListaPerfis");
        }
    
        public virtual ObjectResult<spListaSobreposicao_Result> spListaSobreposicao(Nullable<int> idutilizador, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim)
        {
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaSobreposicao_Result>("spListaSobreposicao", idutilizadorParameter, datainicioParameter, datafimParameter);
        }
    
        public virtual ObjectResult<spListaTipologia_Result> spListaTipologia(Nullable<int> id, Nullable<bool> todas)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var todasParameter = todas.HasValue ?
                new ObjectParameter("todas", todas) :
                new ObjectParameter("todas", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaTipologia_Result>("spListaTipologia", idParameter, todasParameter);
        }
    
        public virtual ObjectResult<spListaUtilizadores_Result> spListaUtilizadores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaUtilizadores_Result>("spListaUtilizadores");
        }
    
        public virtual ObjectResult<spListaVeiculoDescricao_Result> spListaVeiculoDescricao()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaVeiculoDescricao_Result>("spListaVeiculoDescricao");
        }
    
        public virtual ObjectResult<spListaVeiculoDescricaoPorIntervalo_Result> spListaVeiculoDescricaoPorIntervalo(Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim, Nullable<bool> incluiveiculomarcacao, Nullable<int> idpedidomarcacaohistorico)
        {
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            var incluiveiculomarcacaoParameter = incluiveiculomarcacao.HasValue ?
                new ObjectParameter("incluiveiculomarcacao", incluiveiculomarcacao) :
                new ObjectParameter("incluiveiculomarcacao", typeof(bool));
    
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaVeiculoDescricaoPorIntervalo_Result>("spListaVeiculoDescricaoPorIntervalo", datainicioParameter, datafimParameter, incluiveiculomarcacaoParameter, idpedidomarcacaohistoricoParameter);
        }
    
        public virtual ObjectResult<spListaVeiculos_Result> spListaVeiculos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaVeiculos_Result>("spListaVeiculos");
        }
    
        public virtual ObjectResult<Nullable<int>> spLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> spObtemCombustivelPorModelo(Nullable<int> idmodelo)
        {
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spObtemCombustivelPorModelo", idmodeloParameter);
        }
    
        public virtual ObjectResult<spObtemComprovativoDano_Result> spObtemComprovativoDano(Nullable<int> idcomprovativo)
        {
            var idcomprovativoParameter = idcomprovativo.HasValue ?
                new ObjectParameter("idcomprovativo", idcomprovativo) :
                new ObjectParameter("idcomprovativo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtemComprovativoDano_Result>("spObtemComprovativoDano", idcomprovativoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spObtemIdUtilizador(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spObtemIdUtilizador", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spObtemIdVeiculoFromIdPedidoMarcacaoHistorico(Nullable<int> idpedidomarcacaohistorico)
        {
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spObtemIdVeiculoFromIdPedidoMarcacaoHistorico", idpedidomarcacaohistoricoParameter);
        }
    
        public virtual ObjectResult<string> spObtemNomeUtilizador(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spObtemNomeUtilizador", usernameParameter);
        }
    
        public virtual ObjectResult<string> spObtemPasswordDefault()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spObtemPasswordDefault");
        }
    
        public virtual int spRepoePasswordUtilizador(Nullable<int> idutilizador)
        {
            var idutilizadorParameter = idutilizador.HasValue ?
                new ObjectParameter("idutilizador", idutilizador) :
                new ObjectParameter("idutilizador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRepoePasswordUtilizador", idutilizadorParameter);
        }
    
        public virtual ObjectResult<spReportPorOwner_Result> spReportPorOwner(Nullable<int> iduser, Nullable<int> idveiculo, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportPorOwner_Result>("spReportPorOwner", iduserParameter, idveiculoParameter, datainicioParameter, datafimParameter);
        }
    
        public virtual ObjectResult<spReportPorVeiculo_Result> spReportPorVeiculo(Nullable<int> iduser, Nullable<int> idveiculo, Nullable<System.DateTime> datainicio, Nullable<System.DateTime> datafim)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var idveiculoParameter = idveiculo.HasValue ?
                new ObjectParameter("idveiculo", idveiculo) :
                new ObjectParameter("idveiculo", typeof(int));
    
            var datainicioParameter = datainicio.HasValue ?
                new ObjectParameter("datainicio", datainicio) :
                new ObjectParameter("datainicio", typeof(System.DateTime));
    
            var datafimParameter = datafim.HasValue ?
                new ObjectParameter("datafim", datafim) :
                new ObjectParameter("datafim", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportPorVeiculo_Result>("spReportPorVeiculo", iduserParameter, idveiculoParameter, datainicioParameter, datafimParameter);
        }
    
        public virtual int spTerminaPedidoDeMarcacao(Nullable<int> idpedidomarcacaohistorico, Nullable<decimal> kms)
        {
            var idpedidomarcacaohistoricoParameter = idpedidomarcacaohistorico.HasValue ?
                new ObjectParameter("idpedidomarcacaohistorico", idpedidomarcacaohistorico) :
                new ObjectParameter("idpedidomarcacaohistorico", typeof(int));
    
            var kmsParameter = kms.HasValue ?
                new ObjectParameter("kms", kms) :
                new ObjectParameter("kms", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTerminaPedidoDeMarcacao", idpedidomarcacaohistoricoParameter, kmsParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spVerificaMarca(string descricao)
        {
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spVerificaMarca", descricaoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spVerificaModelo(string descricao, Nullable<int> idmarca, Nullable<int> idcombustivel)
        {
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            var idcombustivelParameter = idcombustivel.HasValue ?
                new ObjectParameter("idcombustivel", idcombustivel) :
                new ObjectParameter("idcombustivel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spVerificaModelo", descricaoParameter, idmarcaParameter, idcombustivelParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spVerificaPassword(string password)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spVerificaPassword", passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spVerificaPasswordUser(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spVerificaPasswordUser", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spVerificaTipologia(string descricao)
        {
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spVerificaTipologia", descricaoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spVerificaUtilizador(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spVerificaUtilizador", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spVerificaVeiculo(Nullable<int> idmodelo, Nullable<int> idtipologia, string matricula, Nullable<int> idowner, Nullable<decimal> kms, Nullable<decimal> kmscontrato)
        {
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            var idtipologiaParameter = idtipologia.HasValue ?
                new ObjectParameter("idtipologia", idtipologia) :
                new ObjectParameter("idtipologia", typeof(int));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("matricula", matricula) :
                new ObjectParameter("matricula", typeof(string));
    
            var idownerParameter = idowner.HasValue ?
                new ObjectParameter("idowner", idowner) :
                new ObjectParameter("idowner", typeof(int));
    
            var kmsParameter = kms.HasValue ?
                new ObjectParameter("kms", kms) :
                new ObjectParameter("kms", typeof(decimal));
    
            var kmscontratoParameter = kmscontrato.HasValue ?
                new ObjectParameter("kmscontrato", kmscontrato) :
                new ObjectParameter("kmscontrato", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spVerificaVeiculo", idmodeloParameter, idtipologiaParameter, matriculaParameter, idownerParameter, kmsParameter, kmscontratoParameter);
        }
    }
}
